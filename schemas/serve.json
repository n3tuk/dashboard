{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/n3tuk/dashboard/blob/main/schemas/serve.json",
  "title": "dashboard serve Configuration File",
  "description": "The configuration file for the dashboard application when running as a web service",
  "$defs": {
    "web": {
      "title": "Web Servie Configuration",
      "description": "The configuration for the web service",
      "type": "object",
      "properties": {
        "bind": {
          "$ref": "#/$defs/bind"
        },
        "timeouts": {
          "$ref": "#/$defs/timeouts"
        }
      }
    },
    "bind": {
      "title": "The Web Serve Configuration",
      "description": "The configuration for binding the web service on startup",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "address": {
          "$ref": "#/$defs/address"
        },
        "port": {
          "$ref": "#/$defs/port"
        },
        "proxies": {
          "$ref": "#/$defs/proxies"
        }
      }
    },
    "address": {
      "title": "Service Address",
      "description": "The hostname of IPv4/IPv6 address to bind the service to on startup",
      "examples": ["localhost", "127.0.0.1", "::1"],
      "anyOf": [
        {
          "type": "string",
          "format": "hostname"
        },
        {
          "type": "string",
          "format": "ipv4"
        },
        {
          "type": "string",
          "format": "ipv6"
        }
      ]
    },
    "port": {
      "title": "Service Port Number",
      "description": "The TCP port number to bind the service to on startup",
      "type": "number",
      "minimum": 1025,
      "maximum": 65535
    },
    "proxies": {
      "title": "Proxy Addresses",
      "description": "A list of IPv4 and IPv6 addresses or CIDRs which should be trusted for processing the remote Client address",
      "type": "array",
      "default": ["127.0.0.1", "::1"],
      "items": {
        "anyOf": [
          {
            "type": "string",
            "format": "hostname"
          },
          {
            "type": "string",
            "format": "ipv4"
          },
          {
            "type": "string",
            "format": "ipv6"
          }
        ]
      }
    },
    "timeouts": {
      "title": "Web Server Timeouts",
      "description": "Configure timeouts for the web server",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "read": {
          "$ref": "#/$defs/timeout-read"
        },
        "write": {
          "$ref": "#/$defs/timeout-write"
        },
        "idle": {
          "$ref": "#/$defs/timeout-idle"
        },
        "headers": {
          "$ref": "#/$defs/timeout-headers"
        }
      }
    },
    "timeout-read": {
      "title": "Request Read Timeout",
      "description": "The maximum time to read the full request, including the body, from the client",
      "type": "number",
      "default": 5,
      "minimum": 0,
      "maximum": 60
    },
    "timeout-write": {
      "title": "Request Read Timeout",
      "description": "The maximum time to write the full response, including the body, to the client",
      "type": "number",
      "default": 10,
      "minimum": 0,
      "maximum": 60
    },
    "timeout-idle": {
      "title": "Request Read Timeout",
      "description": "The maximum time to keep a connection open between requests",
      "type": "number",
      "default": 30,
      "minimum": 0,
      "maximum": 60
    },
    "timeout-headers": {
      "title": "Request Headers Timeout",
      "description": "The maximum time to read the headers for the request from the client",
      "type": "number",
      "default": 2,
      "minimum": 0,
      "maximum": 60
    },
    "logging": {
      "title": "Logging Configuration",
      "description": "Configure the logging output from the dashboard send command",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "level": {
          "$ref": "#/$defs/logging-level"
        },
        "json": {
          "$ref": "#/$defs/logging-json"
        }
      }
    },
    "logging-level": {
      "description": "Set whether or not to use JSON-based structured logging",
      "type": "string",
      "enum": ["debug", "info", "warning", "error"]
    },
    "logging-json": {
      "description": "Set whether or not to use JSON-based structured logging",
      "type": "boolean"
    }
  },
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "web": {
      "$ref": "#/$defs/web"
    },
    "logging": {
      "$ref": "#/$defs/logging"
    }
  }
}
